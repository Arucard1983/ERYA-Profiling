#include "ERYAProfilingwizardSRIMImport.h"
#include "ERYAProfilingERYAProfilingMain.h"

ERYAProfilingwizardSRIMImport::ERYAProfilingwizardSRIMImport( wxWindow* parent )
:
wizardSRIMImport( parent )
{

}

void ERYAProfilingwizardSRIMImport::OnSRIMImportCancel( wxWizardEvent& event )
{
  // Call the parent frame
 ERYAProfilingERYAProfilingMain *Parent = (ERYAProfilingERYAProfilingMain *) GetParent();
 // Sync the values
 Parent->SetSync(false);
 return;
}

void ERYAProfilingwizardSRIMImport::OnSRIMImportComplete( wxWizardEvent& event )
{
 // Call the parent frame
  ERYAProfilingERYAProfilingMain *Parent = (ERYAProfilingERYAProfilingMain *) GetParent();
  // Prepare the SRIM array
  ElementSRIMArray LocalSRIMTables;
  ZieglerParameters LocalZiegler;
  if (radioZieglerParameters->GetSelection() == 0) // Copy system Ziegler Parameters
  {
   Parent->GetZiegler(LocalZiegler);
  }
  else if (radioZieglerParameters->GetSelection() == 1) // Get Ziegler Parameters from the selected file
  {
   wxString ERYAProfilingZiegler = fileZieglerSource->GetPath();
   wxFileName ZieglerFileName(ERYAProfilingZiegler);
   wxString Version = ZieglerFileName.GetExt();
   ZieglerFile sourcefile(ERYAProfilingZiegler,Version,LocalZiegler,LocalSRIMTables,0);
   if(sourcefile.ZieglerFileLoad())
   {
     LocalZiegler = sourcefile.GetParameters();
   }
   else
   {
    // Sync the values
    Parent->SetSync(false);
    return;
   }
  }
  else // Do not export any Ziegler Parameters forehand
  {
    LocalZiegler.Clear();
  }
  // Start the SRIM table parsing
  int n = listSRIMSourceFiles->GetCount();
  for (int i=0; i<n; i++)
  {
    wxString LocalSRIMPath = listSRIMSourceFiles->GetString(i);
    SRIMFile temp(LocalSRIMPath);
    int Number;
    wxArrayString Energy, Sigma;
    if(temp.SRIMImport())
    {
      Number = temp.GetAtomic();
      Energy = temp.GetEnergy();
      Sigma = temp.GetStoppingPower();
      LocalSRIMTables.Replace(Number,Energy,Sigma);
    }
  }
  // Store the file output
  wxString ERYAOutputZiegler = fileZieglerOutput->GetPath();
  ZieglerFile file(ERYAOutputZiegler,wxT("epsz"),LocalZiegler,LocalSRIMTables,0);
  if(file.ZieglerFileSave())
  {
   // Sync the values
    Parent->SetSync(true);
    return;
  }
  // Sync the values
  Parent->SetSync(false);
  return;
}

void ERYAProfilingwizardSRIMImport::OnSRIMSourceSelect( wxCommandEvent& event )
{
 int n = listSRIMSourceFiles->GetSelection();
}

void ERYAProfilingwizardSRIMImport::OnSRIMSourceLoad( wxCommandEvent& event )
{
 wxFileDialog *OpenDialog = new wxFileDialog(this, wxT("Select any number of element Stopping Power file generated by SRIM"), wxEmptyString, wxEmptyString, wxT("LabView ERYA(*.txt)|*.txt"), wxFD_OPEN|wxFD_MULTIPLE, wxDefaultPosition);
 if (OpenDialog->ShowModal() == wxID_OK)
 {
  wxArrayString ERYAProfilingZieglerPaths;
  OpenDialog->GetPaths(ERYAProfilingZieglerPaths);
  int n = listSRIMSourceFiles->Append(ERYAProfilingZieglerPaths);
}
OpenDialog->Close();
}


void ERYAProfilingwizardSRIMImport::OnSRIMSourceRemove( wxCommandEvent& event )
{
 int n = listSRIMSourceFiles->GetSelection();
 if (n != wxNOT_FOUND)
 {
  listSRIMSourceFiles->Delete(n);
 }
}

void ERYAProfilingwizardSRIMImport::OnSRIMSourceClear( wxCommandEvent& event )
{
 listSRIMSourceFiles->Clear();
}

void ERYAProfilingwizardSRIMImport::OnEnableZieglerFiles( wxCommandEvent& event )
{
 int n = radioZieglerParameters->GetSelection();
}

